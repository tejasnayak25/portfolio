.header {
    /* Make sure the `div` stays there, even when scrolling. */
    position: fixed;
    /**
     * Gradient, because why not. Endless opportunities.
     * The gradient ends in `#36c`, which happens to be the app's
     * `<meta name="theme-color" content="#36c">`.
     */
    /* background-image: linear-gradient(90deg, #36c, #131313, 33%, #36c); */
    /* Use the environment variable for the left anchoring with a fallback. */
    left: env(titlebar-area-x, 0);
    /* Use the environment variable for the top anchoring with a fallback. */
    top: env(titlebar-area-y, 0);
    /* Use the environment variable for setting the width with a fallback. */
    width: env(titlebar-area-width, 100%);
    /* Use the environment variable for setting the height with a fallback. */
    height: env(titlebar-area-height, 40px);
}

/* The entire search `div` is draggable… */
.header {
    -webkit-app-region: drag;
    app-region: drag;
}
  
/* …except for the `input`. */
.header nav {
    -webkit-app-region: no-drag;
    app-region: no-drag;
}

.slideup {
    animation: slideup ease-out 0.1s;
}

@keyframes slideup {
    from {
        transform: scaleY(0);
        opacity: 0;
    }
    to {
        transform: scaleY(1);
        opacity: 1;
    }
}


.scroll-x {
    overflow-x: scroll;
}

.scroll-y {
    overflow-y: scroll;
}

.scroll-x::-webkit-scrollbar {
    height: 5px;
}

.scroll-y::-webkit-scrollbar {
    width: 5px;
}

.scroll-x::-webkit-scrollbar,
.scroll-y::-webkit-scrollbar {
    background-color: white;
}

.scroll-x::-webkit-scrollbar-thumb,
.scroll-y::-webkit-scrollbar-thumb {
    background-color: aliceblue;
}

.dark .scroll-x::-webkit-scrollbar,
.dark .scroll-y::-webkit-scrollbar {
    background-color: rgb(51 65 85 / 0.6);
}

.dark .scroll-x::-webkit-scrollbar-thumb,
.dark .scroll-y::-webkit-scrollbar-thumb {
    background-color: rgb(65, 87, 117);
}

@media (prefers-color-scheme: dark) {
    .scroll-x::-webkit-scrollbar,
    .scroll-y::-webkit-scrollbar {
        background-color: rgb(51 65 85 / 0.6);
    }

    .scroll-x::-webkit-scrollbar-thumb,
    .scroll-y::-webkit-scrollbar-thumb {
        background-color: rgb(65, 87, 117);
    }
}

.spin {
    animation: spin 1s infinite;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.draggable::after {
    width: 17px;
    height: 17px;
    border-radius: 9999px;
    align-self: center;
    justify-self: start;
    display: flex;
    background: #000;
}

input[type=number]::-webkit-inner-spin-button, 
    input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none; 
}


.switch {
    display: inline-flex;
    align-items: center;
    cursor: pointer;
}

.switch input {
  display: none;
}

.switch .slider {
  position: relative;
  width: 44px;
  height: 24px;
  background-color: #ccc;
  border-radius: 24px;
  transition: background-color 0.2s;
}

.switch .slider::after {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: 20px;
  height: 20px;
  background-color: #fff;
  border-radius: 50%;
  transition: transform 0.2s;
}

.switch input:checked + .slider {
  background-color: rgb(37 99 235);
}

.switch input:checked + .slider::after {
  transform: translateX(20px);
}

.grid-new {
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
      grid-auto-rows: auto;
      grid-auto-flow: column;
}

.textarea-selected {
    outline-style: solid;
    outline-offset: 2px;
    outline-width: 2px;
}

.scrollbar-hidden::-webkit-scrollbar {
    width: 0;
}

#suggestContainer .selected {
    color: cyan;
}

.grid-projects {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
}

/* Smooth transitions for project cards when observed */
.project-observer {
    transition: transform 360ms cubic-bezier(0.22, 1, 0.36, 1),
                opacity 280ms ease-in-out,
                box-shadow 360ms ease-in-out;
    transform-origin: center center;
    will-change: transform, opacity;
}

.project-observer.in-viewport {
    transform: scale(1.08);
    box-shadow: 0 18px 40px rgba(2,6,23,0.6);
    opacity: 1 !important;
}

.project-observer:not(.in-viewport) {
    transform: scale(1);
    opacity: 0.55;
}